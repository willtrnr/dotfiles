#!/usr/bin/env bash

set -e

PKGNAME="$2"
if [ -z "$PKGNAME" ]; then
  exit 1
fi

mkdir -p "${PKGNAME}/${PKGNAME}/src" "${PKGNAME}/.cargo"

pushd "${PKGNAME}" || exit 1
trap 'popd' EXIT

git init

curl -sSf https://www.toptal.com/developers/gitignore/api/rust \
  | sed 's/^Cargo.lock/#Cargo.lock/' > .gitignore

cat > .editorconfig <<EOF
# http://editorconfig.org
root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 2
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

[*.rs]
indent_size = 4

[*.md]
max_line_length = 88
EOF

"${HOME}/.local/bin/mit" > LICENSE

cat > README.md <<EOF
${PKGNAME}
==========
EOF

cat > Cargo.toml <<EOF
[workspace]
members = [
  "${PKGNAME}",
]
resolver = "2"

[workspace.dependencies]
mimalloc = "0.1"

[profile.release]
codegen-units = 1
lto = true
opt-level = "s"
panic = "unwind"
split-debuginfo = "packed"
strip = "debuginfo"
EOF

cat > rust-toolchain.toml <<EOF
[toolchain]
channel = "stable"
profile = "default"
targets = [
  "x86_64-unknown-linux-gnu",
]
EOF

cat > .cargo/config.toml <<EOF
[alias]
br = "build --profile=release"

[target.'cfg(target_arch = "x86_64")']
rustflags = ["-C", "target-cpu=x86-64-v3"]

[target.'cfg(target_arch = "aarch64")']
rustflags = ["-C", "target-feature=+neon"]

[target.'cfg(target_env = "musl")']
rustflags = ["-C", "target-feature=+crt-static"]

[target.'cfg(all(target_arch = "x86_64", target_os = "linux", target_env = "musl"))']
linker = "x86_64-linux-musl-gcc"

[target.'cfg(all(target_arch = "aarch64", target_os = "linux", target_env = "musl"))']
linker = "aarch64-linux-musl-gcc"
EOF

cat > deny.toml <<EOF
[graph]
targets = [
  "x86_64-unknown-linux-gnu",
]
all-features = true

[advisories]
version = 2
git-fetch-with-cli = true

[licenses]
version = 2
allow = [
  "MIT",
]

[licenses.private]
ignore = true

[bans]
deny = [
  { crate = "cc:=1.0.91", reason = "breaks xwin" },
  { crate = "log", deny-multiple-versions = true },
  { crate = "serde_derive:>=1.0.172,<1.0.184", reason = "bundled binaries" },
  { crate = "tracing", deny-multiple-versions = true },
]

[sources]
unknown-git = "allow"
EOF

cat > "${PKGNAME}/Cargo.toml" <<EOF
[package]
name = "${PKGNAME}"
version = "0.1.0"
authors = [
  "github.com/willtrnr",
]
edition = "2021"
rust-version = "1.75"
description = ""
repository = "https://github.com/willtrnr/${PKGNAME}"
license = "MIT"
publish = false

[dependencies]
mimalloc = { workspace = true }
EOF

echo > "${PKGNAME}/src/lib.rs"

cat > "${PKGNAME}/src/main.rs" <<EOF
#[global_allocator]
static GLOBAL: mimalloc::MiMalloc = mimalloc::MiMalloc;

pub fn main() {}
EOF
